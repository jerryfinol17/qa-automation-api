{"name": "test_crud_posts[posts_delete]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 200 == 204\n +  where 200 = <Response [200]>.status_code", "trace": "base_url = 'https://jsonplaceholder.typicode.com/'\nload_config = {'endpoints': {'posts_delete': {'expected_file': 'data/expectations/posts_delete.json', 'method': 'DELETE', 'params': ...ta/expectations/posts_put.json', 'method': 'PUT', 'path': '/posts/1', 'payload_file': 'data/payloads/posts_put.json'}}}\nload_payload = (None, 'posts_delete')\nload_expectation = {'posts_delete': {'required_keys': [], 'response_type': 'none', 'status_code': 204}, 'posts_get': {'required_keys': ['...: 201}, 'posts_put': {'required_keys': ['id', 'title', 'body', 'userId'], 'response_type': 'dict', 'status_code': 200}}\n\n    @pytest.mark.parametrize(\"load_payload\", endpoints, indirect=True)\n    def test_crud_posts(base_url, load_config, load_payload, load_expectation):\n        payload, endpoint = load_payload  # Desempaqueta: payload (dict o None), endpoint (str)\n        config = load_config[\"endpoints\"][endpoint]\n        expected = load_expectation[endpoint]\n        url = base_url + config[\"path\"]\n        params = config.get(\"params\", {})\n    \n        with step(f\"Execute {config['method']} request to {url}\"):\n            if config[\"method\"] == \"GET\":\n                response = requests.get(url, params=params)\n            elif config[\"method\"] == \"POST\":\n                response = requests.post(url, json=payload)\n            elif config[\"method\"] == \"PUT\":\n                response = requests.put(url, json=payload)\n            elif config[\"method\"] == \"DELETE\":\n                response = requests.delete(url)\n            response.raise_for_status()\n    \n        with step(f\"Validate response for {endpoint}\"):\n>           assert response.status_code == expected[\"status_code\"]\nE           assert 200 == 204\nE            +  where 200 = <Response [200]>.status_code\n\ntest_post.py:27: AssertionError"}, "steps": [{"name": "Execute DELETE request to https://jsonplaceholder.typicode.com//posts/1", "status": "passed", "start": 1759431423159, "stop": 1759431423707}, {"name": "Validate response for posts_delete", "status": "failed", "statusDetails": {"message": "AssertionError: assert 200 == 204\n +  where 200 = <Response [200]>.status_code\n", "trace": "  File \"C:\\Users\\dhamyan\\PycharmProjects\\PythonProject\\PythonProject\\qa-automation-api\\test\\test_post.py\", line 27, in test_crud_posts\n    assert response.status_code == expected[\"status_code\"]\n"}, "start": 1759431423707, "stop": 1759431423707}], "parameters": [{"name": "load_payload", "value": "'posts_delete'"}], "start": 1759431423159, "stop": 1759431423710, "uuid": "bca0aed9-2857-400f-889c-3a1b4a344c7d", "historyId": "ddfdc299837daf1285352b70e64243d5", "testCaseId": "ed9f4555fcd06cbc7e8f261e91a8c2e3", "fullName": "test.test_post#test_crud_posts", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_post"}, {"name": "host", "value": "Jerry"}, {"name": "thread", "value": "18308-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_post"}], "titlePath": ["test", "test_post.py"]}